{{- if hasKey .Values.hub.envModules "pythonDataScience" }}
{{- if has "0.1.1" .Values.hub.envModules.pythonDataScience }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-env-installer-python-data-science-0-1-1-conda-env
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    "helm.sh/hook": post-install, post-upgrade
    "helm.sh/hook-weight": "-6"
    "helm.sh/hook-delete-policy": hook-succeeded
data:
  conda-environment-definition.yaml: |
    name: python-data-science-env

    channels:
      - conda-forge
      - pytorch
      - fastchan
      - bioconda
      - defaults

    dependencies:
      - python=3.9
      - pip=21.3
      - pandas=1.3.3
      - scikit-learn=1.0
      - scikit-image=0.18.3
      - sympy=1.8
      - cython=0.29.24
      - patsy=0.5.2
      - cloudpickle=1.6*
      - dill=0.3.4
      - statsmodels=0.12.2
      - dvc=2.7.4
      - beautifulsoup4=4.10*
      - xlrd=2*
      - numba=0.54*
      - sqlalchemy=1.4*
      - hdf5=1*
      - h5py=3*
      - gnuplot=5.4.1
      - bokeh=2.4.0
      - jupyter_bokeh=3.0.2
      - holoviews=1.14*
      - hvplot=0.7*
      - panel=0.12*
      - voila=0.2.15
      - plotly=5.3*
      - seaborn=0.11*
      - vincent=0.4*
      - altair=4.1*
      - vega_datasets=0.9*
      - bqplot=0.12*
      - pythreejs=2.3*
      - py4j=0.10.9
      - pyviz_comms=2.1*
      - pytorch=1.10.2
      - torchvision=0.11.3
      - fastai=2.5.3
      - pip:
        - opencv-python==4.5.3.56
        - tensorflow==2.8.0
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-env-installer-python-data-science-0-1-1-modulefile
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    "helm.sh/hook": post-install, post-upgrade
    "helm.sh/hook-weight": "-6"
    "helm.sh/hook-delete-policy": hook-succeeded
data:
  modulefile.lua: |
    help([[
    Conda environment with Python Data Science packages
    ]])

    whatis("Version: 0.1.1")
    whatis("Keywords: Data Science")

    prepend_path("JUPYTER_PATH", "/opt/modules/conda-envs/python-data-science-0.1.1/share/jupyter")
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-env-installer-python-data-science-0-1-1-installer
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    "helm.sh/hook": post-install, post-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: "{{ .Release.Name }}"
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    spec:
      containers:
        - name: env-installer-test
          image: labshare/polyglot-notebook:env-installer-0.9.1
          command: ["sh", "-c"]
          args:
            - if [ ! -d "$EXT_MOD_PATH/$ENV_MODULE_NAME-$ENV_MODULE_VERSION" ];
              then
                  mkdir -p $EXT_MOD_PATH/conda-envs/$ENV_MODULE_NAME-$ENV_MODULE_VERSION;
                  mamba env create --prefix $EXT_MOD_PATH/conda-envs/$ENV_MODULE_NAME-$ENV_MODULE_VERSION --file /home/jovyan/conda-environment-definition.yaml;
                  mkdir -p $EXT_MOD_PATH/modulefiles/$ENV_MODULE_NAME;
                  cp /home/jovyan/modulefile.lua $EXT_MOD_PATH/modulefiles/$ENV_MODULE_NAME/$ENV_MODULE_VERSION.lua;
                  mv $EXT_MOD_PATH/conda-envs/$ENV_MODULE_NAME-$ENV_MODULE_VERSION/share/jupyter/kernels/python3 $EXT_MOD_PATH/conda-envs/$ENV_MODULE_NAME-$ENV_MODULE_VERSION/share/jupyter/kernels/$ENV_MODULE_NAME;
                  jq --arg variable "$KERNEL_DISPLAY_NAME" '.display_name = $variable' $EXT_MOD_PATH/conda-envs/$ENV_MODULE_NAME-$ENV_MODULE_VERSION/share/jupyter/kernels/$ENV_MODULE_NAME/kernel.json > tmp.$$.json && mv tmp.$$.json $EXT_MOD_PATH/conda-envs/$ENV_MODULE_NAME-$ENV_MODULE_VERSION/share/jupyter/kernels/$ENV_MODULE_NAME/kernel.json;
              fi
          env:
            - name: EXT_MOD_PATH
              value: /opt/modules
            - name: ENV_MODULE_NAME
              value: python-data-science
            - name: ENV_MODULE_VERSION
              value: 0.1.1
            - name: KERNEL_DISPLAY_NAME
              value: "Python Data Science 0.1.1"
          volumeMounts:
            - mountPath: /opt/modules
              name: modules-volume
            - mountPath: /home/jovyan/conda-environment-definition.yaml
              name: conda-environment-definition
              subPath: conda-environment-definition.yaml
            - mountPath: /home/jovyan/modulefile.lua
              name: modulefile
              subPath: modulefile.lua
      restartPolicy: Never
      volumes:
        - name: modules-volume
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-{{ .Chart.Name }}-hub-{{ .Values.hub.storage.modulesClaimName }}
        - name: conda-environment-definition
          configMap:
            name: {{ .Release.Name }}-env-installer-python-data-science-0-1-1-conda-env
            items:
              - key: conda-environment-definition.yaml
                path: conda-environment-definition.yaml
        - name: modulefile
          configMap:
            name: {{ .Release.Name }}-env-installer-python-data-science-0-1-1-modulefile
            items:
              - key: modulefile.lua
                path: modulefile.lua
  backoffLimit: 4
{{- end }}
{{- end }}