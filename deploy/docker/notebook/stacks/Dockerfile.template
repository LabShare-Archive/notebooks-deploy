ARG BASE_CONTAINER={{ base }}
FROM $BASE_CONTAINER

LABEL hash={{ hash }}

ARG NB_USER="jovyan"
ARG NB_UID="1000"
ARG NB_GID="100"

{% for f in add_files %}ADD {{f.key}} {{f.value}}
{% endfor -%}
{% if env %}{% set indent = joiner(' \\\n    ') %}ENV {% for v in env %}{{ indent() }}{{ v.key }}={% if v.value %}{{v.value}}{% endif %}{% endfor %}{% endif %}
{% if path %}{% set indent = joiner(':') %}ENV PATH={% for v in path %}{{ indent() }}{{ v.key }}{% endfor %}:$PATH{% endif -%}
{% if apt %}
USER root

RUN apt-fast update && \
    apt-fast install -yq --no-install-recommends {% for package in apt %}{{ package.key }} {% endfor %} && \
    rm -rf /var/lib/apt/lists/*    
{% endif -%}

USER $NB_UID
WORKDIR $HOME

# Install additional conda and pip packages if any
# Clear all temporary and auxiliary files to minimize image size
RUN {% if conda_channels %}{% set indent = joiner(' && \\\n    ') %}{% for channel in conda_channels %}{{ indent() | safe }}$CONDA_DIR/bin/conda config --system --prepend channels {{ channel.key }}{% endfor %}&& \{% endif -%}
    {% if conda %}mamba install -y {% for package in conda %}{{ package.key }}{% if package.value %}={{package.value}}{% endif %} {% endfor %}&& \{% endif -%}
    {% if pip %}pip install {% for package in pip %}{{ package.key }}{% if package.value %}=={{package.value}}{% endif %} {% endfor %}&& \{% endif -%}
    npm cache clean --force && \
    rm -rf $CONDA_DIR/share/jupyter/lab/staging && \
    conda clean --all -f -y && \
    rm -rf /home/$NB_USER/.cache/yarn && \
    find /opt/conda/ -follow -type f -name '*.a' -delete && \
    find /opt/conda/ -follow -type f -name '*.pyc' -delete && \
    find /opt/conda/ -follow -type f -name '*.js.map' -delete
{% for s in scripts %}{{ s | dockerfileBlock('RUN') | safe }}{% endfor -%}