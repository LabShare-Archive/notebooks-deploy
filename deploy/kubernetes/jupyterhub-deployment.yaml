apiVersion: apps/v1
kind: Deployment
metadata:
  name: jupyterhub
  labels:
    application: jupyterhub
spec:
  selector:
    matchLabels:
      application: jupyterhub
  replicas: 1
  template:
    metadata:
      labels:
        application: jupyterhub
      annotations:
        configHash: CONFIG_HASH_VALUE
    spec:
      initContainers:
      # This container clones the git repo with stacks
      - name: git-clone
        image: alpine/git
        args:
          - clone
          - --branch
          - STACKS_BRANCH_VALUE
          - --single-branch
          - --
          - STACKS_REPO_VALUE
          - /stacks
        securityContext:
          runAsUser: 1
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
        volumeMounts:
          - name: stacks
            mountPath: /stacks
      - name: set-version
        image: busybox
        command:
          - sed 
          - -i.bak 
          - -e
          - "s/NOTEBOOK_VERSION_VALUE/NOTEBOOK_VERSION_VALUE_VALUE/g"
          - /stacks/deploy/docker/notebook/stacks/base.yaml
        securityContext:
          runAsUser: 1
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
        volumeMounts:
          - name: stacks
            mountPath: /stacks
      serviceAccountName: jupyterhub-sa
      containers:
        - name: jupyterhub
          image: labshare/jupyterhub:HUB_VERSION_VALUE
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
              # This name will be used in the Service.
              name: jupyter-http
            - containerPort: 8081
              # This name will be used in the Service.
              name: jupyter-in
          env:
            - name: OAUTH_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: jupyterhub-auth-config
                  key: client_id
            - name: OAUTH_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: jupyterhub-auth-config
                  key: client_secret
            - name: TENANT
              valueFrom:
                secretKeyRef:
                  name: jupyterhub-auth-config
                  key: tenant
            - name: AUTH_URL
              valueFrom:
                secretKeyRef:
                  name: jupyterhub-auth-config
                  key: auth_url
            - name: OAUTH_CALLBACK_URL
              valueFrom:
                secretKeyRef:
                  name: jupyterhub-auth-config
                  key: oauth_callback_url
            - name: ADMIN_USERS
              valueFrom:
                secretKeyRef:
                  name: jupyterhub-auth-config
                  key: admin_users
            - name: ADMIN_SERVICE_ACC
              valueFrom:
                secretKeyRef:
                  name: notebooks-hub-auth-config
                  key: notebooks_hub_api_key
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: jupyterhub-postgres-config
                  key: db
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: jupyterhub-postgres-config
                  key: user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: jupyterhub-postgres-config
                  key: password
            - name: OAUTH2_AUTHORIZE_URL
              value: "$(AUTH_URL)/auth/$(TENANT)/authorize"
            - name: OAUTH2_TOKEN_URL
              value: "$(AUTH_URL)/auth/$(TENANT)/oidc/token"
            - name: OAUTH2_USERDATA_URL
              value: "$(AUTH_URL)/auth/me"
          volumeMounts:
            - mountPath: /srv/jupyterhub/config/jupyterhub-config.py
              name: jupyterhub-config
              subPath: jupyterhub-config.py
            - name: stacks
              mountPath: /stacks
      volumes:
        - name: jupyterhub-config
          configMap:
              name: jupyterhub-config
              items:
              - key: jupyterhub-config.py
                path: jupyterhub-config.py
        - name: stacks
          emptyDir: {}